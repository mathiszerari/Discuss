{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ReplyService {\n  constructor() {\n    this.replySubject = new BehaviorSubject('');\n    this.reply$ = this.replySubject.asObservable();\n    this.isReplyClicked$ = false;\n    this.isClicked = new Subject();\n    this.clicked$ = this.isClicked.asObservable();\n  }\n  setReply(reply) {\n    this.replySubject.next(reply);\n  }\n  updateMaVariable(nouvelleValeur) {\n    this.isClicked.next(nouvelleValeur);\n  }\n}\nReplyService.ɵfac = function ReplyService_Factory(t) {\n  return new (t || ReplyService)();\n};\nReplyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ReplyService,\n  factory: ReplyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;AACtC,SAASC,OAAO,QAAQ,MAAM;;AAM9B,OAAM,MAAOC,YAAY;EAJzBC;IAKU,iBAAY,GAAG,IAAIH,eAAe,CAAS,EAAE,CAAC;IAEtD,WAAM,GAAG,IAAI,CAACI,YAAY,CAACC,YAAY,EAAE;IACzC,oBAAe,GAAY,KAAK;IAMxB,cAAS,GAAG,IAAIJ,OAAO,EAAO;IACtC,aAAQ,GAAG,IAAI,CAACK,SAAS,CAACD,YAAY,EAAE;;EALxCE,QAAQ,CAACC,KAAa;IACpB,IAAI,CAACJ,YAAY,CAACK,IAAI,CAACD,KAAK,CAAC;EAC/B;EAKAE,gBAAgB,CAACC,cAAmB;IAClC,IAAI,CAACL,SAAS,CAACG,IAAI,CAACE,cAAc,CAAC;EACrC;;AAfWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAU,SAAZV,YAAY;EAAAW,YAHX;AAAM","names":["BehaviorSubject","Subject","ReplyService","constructor","replySubject","asObservable","isClicked","setReply","reply","next","updateMaVariable","nouvelleValeur","factory","providedIn"],"sourceRoot":"","sources":["/Users/mathiszerari/Developer/Projects/2023/ng-discuss-app/angular/src/app/reply.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ReplyService {\n  private replySubject = new BehaviorSubject<string>('');\n\n  reply$ = this.replySubject.asObservable();\n  isReplyClicked$: boolean = false;\n\n  setReply(reply: string) {\n    this.replySubject.next(reply);\n  }\n\n  private isClicked = new Subject<any>();\n  clicked$ = this.isClicked.asObservable();\n\n  updateMaVariable(nouvelleValeur: any) {\n    this.isClicked.next(nouvelleValeur);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}