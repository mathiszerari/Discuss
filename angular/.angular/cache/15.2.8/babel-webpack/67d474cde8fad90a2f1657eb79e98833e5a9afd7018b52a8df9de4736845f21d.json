{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../reply.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction InputComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"label\", 4);\n    i0.ɵɵtext(4, \"Your comment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"textarea\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function InputComponent_form_0_Template_textarea_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.replyContent = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 6)(7, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function InputComponent_form_0_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.reply());\n    });\n    i0.ɵɵtext(8, \" Reply \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.replyContent);\n  }\n}\nexport class InputComponent {\n  constructor(replyService) {\n    this.replyService = replyService;\n    this.replyContent = '';\n    this.isReplyClicked = false;\n  }\n  ngOnInit() {}\n  reply() {\n    this.replyService.setReply(this.replyContent);\n    this.replyContent = '';\n    const nouvelleValeur = true;\n    this.replyService.updateMaVariable(nouvelleValeur);\n    this.isReplyClicked = true;\n  }\n}\nInputComponent.ɵfac = function InputComponent_Factory(t) {\n  return new (t || InputComponent)(i0.ɵɵdirectiveInject(i1.ReplyService));\n};\nInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InputComponent,\n  selectors: [[\"app-input\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"mt-10 max-w-xl mx-auto\", 4, \"ngIf\"], [1, \"mt-10\", \"max-w-xl\", \"mx-auto\"], [1, \"w-full\", \"mb-4\", \"border\", \"rounded-xl\", \"bg-gray-700\", \"border-gray-600\"], [1, \"px-4\", \"py-2\", \"rounded-t-xl\", \"bg-gray-800\"], [\"for\", \"comment\", 1, \"sr-only\"], [\"id\", \"comment\", \"rows\", \"3\", \"name\", \"replyContent\", \"placeholder\", \"Write a comment...\", \"required\", \"\", 1, \"w-full\", \"resize-none\", \"focus-visible:outline-none\", \"px-0\", \"text-sm\", \"text-gray-900\", \"border-0\", \"bg-gray-800\", \"focus:ring-0\", \"text-white\", \"dark:placeholder-gray-400\", 3, \"ngModel\", \"ngModelChange\"], [1, \"flex\", \"items-center\", \"justify-between\", \"px-3\", \"py-2\", \"border-t\", \"border-gray-600\"], [\"type\", \"submit\", 1, \"inline-flex\", \"items-center\", \"py-2.5\", \"px-4\", \"text-xs\", \"font-medium\", \"text-center\", \"text-white\", \"shadow-lg\", \"shadow-cyan-500/50\", \"rounded-lg\", \"bg-cyan-500\", \"hover:bg-cyan-400\", \"hover:shadow-cyan-400/50\", 3, \"click\"]],\n  template: function InputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, InputComponent_form_0_Template, 9, 1, \"form\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isReplyClicked);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;IAAAA,+BAA6D;IAGZA,4BAAY;IAAAA,iBAAQ;IACzDA,mCAE2G;IAAxCA;MAAAA;MAAA;MAAA;IAAA,EAAuC;IAACA,iBAAW;IAE1HA,8BAAkF;IACtEA;MAAAA;MAAA;MAAA,OAASA,6BAAO;IAAA,EAAC;IACrBA,uBACJ;IAAAA,iBAAS;;;;IALiCA,eAAwB;IAAxBA,6CAAwB;;;ACE9E,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAHhC,iBAAY,GAAW,EAAE;IACzB,mBAAc,GAAY,KAAK;EAEkB;EAEjDC,QAAQ,IACR;EAEAC,KAAK;IACH,IAAI,CAACF,YAAY,CAACG,QAAQ,CAAC,IAAI,CAACC,YAAY,CAAC;IAC7C,IAAI,CAACA,YAAY,GAAG,EAAE;IAEtB,MAAMC,cAAc,GAAG,IAAI;IAC3B,IAAI,CAACL,YAAY,CAACM,gBAAgB,CAACD,cAAc,CAAC;IAElD,IAAI,CAACE,cAAc,GAAG,IAAI;EAC5B;;AAlBWT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR3Bf,iEAcO;;;MAdAA,0CAAqB","names":["i0","InputComponent","constructor","replyService","ngOnInit","reply","setReply","replyContent","nouvelleValeur","updateMaVariable","isReplyClicked","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/mathiszerari/Developer/Projects/2023/ng-discuss-app/angular/src/app/component/input/input.component.html","/Users/mathiszerari/Developer/Projects/2023/ng-discuss-app/angular/src/app/component/input/input.component.ts"],"sourcesContent":["<form *ngIf=\"!isReplyClicked\" class=\"mt-10 max-w-xl mx-auto\">\n    <div class=\"w-full mb-4 border rounded-xl bg-gray-700 border-gray-600\">\n        <div class=\"px-4 py-2 rounded-t-xl bg-gray-800\">\n            <label for=\"comment\" class=\"sr-only\">Your comment</label>\n            <textarea id=\"comment\" rows=\"3\" name=\"replyContent\" class=\"w-full resize-none focus-visible:outline-none px-0 text-sm \n            text-gray-900 border-0 bg-gray-800 focus:ring-0 text-white dark:placeholder-gray-400\" \n            placeholder=\"Write a comment...\" required [ngModel]=\"replyContent\" (ngModelChange)=\"replyContent = $event\"></textarea>\n        </div>\n        <div class=\"flex items-center justify-between px-3 py-2 border-t border-gray-600\">\n            <button (click)=\"reply()\" type=\"submit\" class=\"inline-flex items-center py-2.5 px-4 text-xs font-medium text-center text-white shadow-lg shadow-cyan-500/50 rounded-lg bg-cyan-500 hover:bg-cyan-400 hover:shadow-cyan-400/50\">\n                Reply\n            </button>\n        </div>\n    </div>\n</form>\n","import { Component } from '@angular/core';\nimport { ReplyService } from '../../reply.service';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n})\n  \nexport class InputComponent {\n  isClicked: any;\n  replyContent: string = '';\n  isReplyClicked: boolean = false;\n\n  constructor(private replyService: ReplyService) {}\n\n  ngOnInit(): void {\n  }\n\n  reply() {\n    this.replyService.setReply(this.replyContent);\n    this.replyContent = '';\n\n    const nouvelleValeur = true;\n    this.replyService.updateMaVariable(nouvelleValeur);\n\n    this.isReplyClicked = true;\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}